{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-ui-loader\";\nexport class LoaderService {\n  constructor(ngxUiLoaderService) {\n    this.ngxUiLoaderService = ngxUiLoaderService;\n    this.config = this.ngxUiLoaderService.getDefaultConfig();\n  }\n}\nLoaderService.ɵfac = function LoaderService_Factory(t) {\n  return new (t || LoaderService)(i0.ɵɵinject(i1.NgxUiLoaderService));\n};\nLoaderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoaderService,\n  factory: LoaderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IACpC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,kBAAkB,CAACE,gBAAgB,EAAE;EAC1D;;AALWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAK,SAAbL,aAAa;EAAAM,YAFZ;AAAM","names":["LoaderService","constructor","ngxUiLoaderService","config","getDefaultConfig","factory","providedIn"],"sourceRoot":"","sources":["D:\\Madrasty\\MadrastyUI\\src\\app\\layout\\services\\loader.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxUiLoaderConfig, NgxUiLoaderService } from 'ngx-ui-loader';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  config: NgxUiLoaderConfig;\n\n  constructor(private ngxUiLoaderService: NgxUiLoaderService) {\n    this.config = this.ngxUiLoaderService.getDefaultConfig();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}